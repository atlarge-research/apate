stages:
  - prepare_ci_image
  - prepare
  - build
  - test
  - verify
  - deploy

variables:
  BUILD_IMAGE: "$CI_REGISTRY_IMAGE/build-image-$CI_COMMIT_REF_SLUG"
  VK_IMAGE: "$CI_REGISTRY_IMAGE/apatelet-$CI_COMMIT_REF_SLUG"
  CP_IMAGE: "$CI_REGISTRY_IMAGE/controlplane-$CI_COMMIT_REF_SLUG"
  GOPATH: "$CI_PROJECT_DIR/.go"
  DS_EXCLUDED_PATHS: ".go" # Exclude the caching dir from scans (doesn't work for now, https://gitlab.com/gitlab-org/gitlab/-/issues/10030)
  SAST_EXCLUDED_PATHS: ".go" # Exclude the caching dir from scans (doesn't work for now, https://gitlab.com/gitlab-org/gitlab/-/issues/10030)
  # Taken from the following minus kubesec (because SCAN_KUBERNETES_MANIFESTS was somehow always set to true)
  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml#L15
  SAST_DEFAULT_ANALYZERS: "brakeman, gosec, flawfinder, security-code-scan, secrets, sobelow"

prepare-build-image:
  stage: prepare_ci_image
  image: docker:latest
  only:
    changes:
      - ci/build-image/Dockerfile
      - .gitlab-ci.yml
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd ./ci/build-image
  script:
    - docker build --pull -t "$BUILD_IMAGE" .
    - docker push "$BUILD_IMAGE"

default:
  image: $BUILD_IMAGE
  before_script:
    - mkdir -p .go
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .go/pkg/mod/

# Include all other ci files
include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - local: ci/build.gitlab-ci.yml
  - local: ci/test.gitlab-ci.yml
  - local: ci/sa.gitlab-ci.yml