// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/atlarge-research/opendc-emulate-kubernetes/pkg/kubernetes (interfaces: ClusterAPI)

// Package mock_kubernetes is a generated GoMock package.
package mock_kubernetes

import (
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	v1 "k8s.io/api/core/v1"
	reflect "reflect"
)

// MockClusterAPI is a mock of ClusterAPI interface
type MockClusterAPI struct {
	ctrl     *gomock.Controller
	recorder *MockClusterAPIMockRecorder
}

// MockClusterAPIMockRecorder is the mock recorder for MockClusterAPI
type MockClusterAPIMockRecorder struct {
	mock *MockClusterAPI
}

// NewMockClusterAPI creates a new mock instance
func NewMockClusterAPI(ctrl *gomock.Controller) *MockClusterAPI {
	mock := &MockClusterAPI{ctrl: ctrl}
	mock.recorder = &MockClusterAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClusterAPI) EXPECT() *MockClusterAPIMockRecorder {
	return m.recorder
}

// GetNodes mocks base method
func (m *MockClusterAPI) GetNodes() (*v1.NodeList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodes")
	ret0, _ := ret[0].(*v1.NodeList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodes indicates an expected call of GetNodes
func (mr *MockClusterAPIMockRecorder) GetNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodes", reflect.TypeOf((*MockClusterAPI)(nil).GetNodes))
}

// GetNumberOfNodes mocks base method
func (m *MockClusterAPI) GetNumberOfNodes() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNumberOfNodes")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNumberOfNodes indicates an expected call of GetNumberOfNodes
func (mr *MockClusterAPIMockRecorder) GetNumberOfNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNumberOfNodes", reflect.TypeOf((*MockClusterAPI)(nil).GetNumberOfNodes))
}

// GetNumberOfPods mocks base method
func (m *MockClusterAPI) GetNumberOfPods(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNumberOfPods", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNumberOfPods indicates an expected call of GetNumberOfPods
func (mr *MockClusterAPIMockRecorder) GetNumberOfPods(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNumberOfPods", reflect.TypeOf((*MockClusterAPI)(nil).GetNumberOfPods), arg0)
}

// GetNumberOfReadyNodes mocks base method
func (m *MockClusterAPI) GetNumberOfReadyNodes() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNumberOfReadyNodes")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNumberOfReadyNodes indicates an expected call of GetNumberOfReadyNodes
func (mr *MockClusterAPIMockRecorder) GetNumberOfReadyNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNumberOfReadyNodes", reflect.TypeOf((*MockClusterAPI)(nil).GetNumberOfReadyNodes))
}

// GetPods mocks base method
func (m *MockClusterAPI) GetPods(arg0 string) (*v1.PodList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPods", arg0)
	ret0, _ := ret[0].(*v1.PodList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPods indicates an expected call of GetPods
func (mr *MockClusterAPIMockRecorder) GetPods(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPods", reflect.TypeOf((*MockClusterAPI)(nil).GetPods), arg0)
}

// RemoveAllApateletsFromCluster mocks base method
func (m *MockClusterAPI) RemoveAllApateletsFromCluster() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveAllApateletsFromCluster")
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveAllApateletsFromCluster indicates an expected call of RemoveAllApateletsFromCluster
func (mr *MockClusterAPIMockRecorder) RemoveAllApateletsFromCluster() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveAllApateletsFromCluster", reflect.TypeOf((*MockClusterAPI)(nil).RemoveAllApateletsFromCluster))
}

// RemoveNodeFromCluster mocks base method
func (m *MockClusterAPI) RemoveNodeFromCluster(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveNodeFromCluster", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveNodeFromCluster indicates an expected call of RemoveNodeFromCluster
func (mr *MockClusterAPIMockRecorder) RemoveNodeFromCluster(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNodeFromCluster", reflect.TypeOf((*MockClusterAPI)(nil).RemoveNodeFromCluster), arg0)
}

// RemoveNodesFromCluster mocks base method
func (m *MockClusterAPI) RemoveNodesFromCluster(arg0 []uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveNodesFromCluster", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveNodesFromCluster indicates an expected call of RemoveNodesFromCluster
func (mr *MockClusterAPIMockRecorder) RemoveNodesFromCluster(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNodesFromCluster", reflect.TypeOf((*MockClusterAPI)(nil).RemoveNodesFromCluster), arg0)
}
