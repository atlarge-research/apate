syntax = "proto3";

option go_package = "github.com/atlarge-research/opendc-emulate-kubernetes/api/controlplane";
package apate.controlplane;

import "google/protobuf/any.proto";
import "scenario/events.proto";

// This node fails, so every request times out
message NodeFailure {}

// Apply latency to every request
message NetworkLatency {
    // The amount of applied latency
    int32 latency_msec = 1;
}

// We apply timeout to every request from k8s besides the ping / heartbeat
message TimeoutKeepHeartbeat {}

// We only apply timeout to ping / heartbeat
message NoTimeoutNoHeartbeat {}

// A percentage of lifecycle requests will error
message ResponseState {
    // The request type to act upon
    RequestType type = 1;

    // How to respond to this request
    scenario.Response response = 2;

    // The percentage of requests to handle like this
    int32 percentage = 3;
}

// The flags given by this message will be overridden on the apatelets
message CustomFlags {

    // The actual flags to be overridden
    map<int32, google.protobuf.Any> custom_flags = 1;
}

// See https://github.com/virtual-kubelet/virtual-kubelet/#podlifecylcehandler
// Ping stands for the heartbeat requests sent by Kubernetes
enum RequestType {
    CREATE_POD = 0;
    UPDATE_POD = 1;
    DELETE_POD = 2;
    GET_POD = 3;
    GET_POD_STATUS = 4;
    GET_PODS = 5;
    PING = 6;
}
