// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: scenario/scenario.proto

package scenario

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PodState_PodStatus int32

const (
	PodState_POD_PENDING   PodState_PodStatus = 0
	PodState_POD_RUNNING   PodState_PodStatus = 1
	PodState_POD_SUCCEEDED PodState_PodStatus = 2
	PodState_POD_FAILED    PodState_PodStatus = 3
	PodState_POD_UNKNOWN   PodState_PodStatus = 4
)

// Enum value maps for PodState_PodStatus.
var (
	PodState_PodStatus_name = map[int32]string{
		0: "POD_PENDING",
		1: "POD_RUNNING",
		2: "POD_SUCCEEDED",
		3: "POD_FAILED",
		4: "POD_UNKNOWN",
	}
	PodState_PodStatus_value = map[string]int32{
		"POD_PENDING":   0,
		"POD_RUNNING":   1,
		"POD_SUCCEEDED": 2,
		"POD_FAILED":    3,
		"POD_UNKNOWN":   4,
	}
)

func (x PodState_PodStatus) Enum() *PodState_PodStatus {
	p := new(PodState_PodStatus)
	*p = x
	return p
}

func (x PodState_PodStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PodState_PodStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scenario_scenario_proto_enumTypes[0].Descriptor()
}

func (PodState_PodStatus) Type() protoreflect.EnumType {
	return &file_scenario_scenario_proto_enumTypes[0]
}

func (x PodState_PodStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PodState_PodStatus.Descriptor instead.
func (PodState_PodStatus) EnumDescriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{5, 0}
}

type Scenario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task []*Task `protobuf:"bytes,1,rep,name=task,proto3" json:"task,omitempty"`
}

func (x *Scenario) Reset() {
	*x = Scenario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario) ProtoMessage() {}

func (x *Scenario) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario.ProtoReflect.Descriptor instead.
func (*Scenario) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{0}
}

func (x *Scenario) GetTask() []*Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp    int32        `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeGroupSet []*NodeGroup `protobuf:"bytes,3,rep,name=nodeGroupSet,proto3" json:"nodeGroupSet,omitempty"`
	Event        *Event       `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Task) GetNodeGroupSet() []*NodeGroup {
	if x != nil {
		return x.NodeGroupSet
	}
	return nil
}

func (x *Task) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type NodeGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAmount int32 `protobuf:"varint,1,opt,name=nodeAmount,proto3" json:"nodeAmount,omitempty"`
}

func (x *NodeGroup) Reset() {
	*x = NodeGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGroup) ProtoMessage() {}

func (x *NodeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGroup.ProtoReflect.Descriptor instead.
func (*NodeGroup) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{2}
}

func (x *NodeGroup) GetNodeAmount() int32 {
	if x != nil {
		return x.NodeAmount
	}
	return 0
}

//
//Node.
//
//Required flags & their defaults:
//- dont_respond_to_ping = false, changes `Ping(context.Context) error` responses
//
//- CRUD responses, changes `PodLifecycleHandler` responses
//- dont_respond_to_create = false
//- dont_respond_to_update = false
//- dont_respond_to_delete = false
//- dont_respond_to_get = false
//- dont_respond_to_get_pods = false
//
//- CRUD errors, changes `PodLifecycleHandler` responses
//- error_on_create = false
//- error_on_update = false
//- error_on_delete = false
//- error_on_get = false
//- error_on_get_pods = false
//
//- Resource pressure, calls k8s API
//- enable_pressure = false
//- cpu_usage (percentage) = 0
//- ram_usage (percentage) = 0
//- storage_usage (percentage) = 0
//- ephemeral_storage_usage (percentage) = 0
//
//- Latency, sleeps in responses
//- global_latency = false
//- global_latency_msec (msec) = 0
//- ping_latency = false
//- ping_latency_msec (msec) = 0
//- crud_latency = false
//- crud_latency_msec (msec) = 0
//
//Flags per event:
//- Node failure:
//- dont_respond_to_ping = true
//- dont_respond_to_crud = true (all of them)
//- error_on_crud = false (all of them)
//- resource_pressure = false (all of them)
//- latency = false (all of them)
//
//- Selective failure
//- No response, but keep heartbeat:
//- dont_respond_to_ping = false
//- dont_respond_to_crud = true (all of them)
//- error_on_crud = false (all of them)
//- enable_pressure = false
//- latency = false (all of them)
//
//- Response, but no heartbeat:
//- dont_respond_to_ping = true
//- dont_respond_to_crud = false (all of them)
//- error_on_crud = false (all of them)
//- enable_pressure = false
//- latency = false (all of them)
//
//- Fail on CRUD's:
//- dont_respond_to_ping = false
//- dont_respond_to_crud = false (all of them)
//- error_on_crud = true (depending on type of CRUD)
//- enable_pressure = false
//- latency = false (all of them)
//
//- Sudden resource pressure:
//- dont_respond_to_ping = false
//- dont_respond_to_crud = false (all of them)
//- error_on_crud = false (all of them)
//- enable_pressure = true
//- cpu_usage = 95
//- latency = false (all of them)
//
//- Network
//- Segregation:
//- dont_respond_to_ping = true
//- dont_respond_to_crud = true (all of them)
//- error_on_crud = false (all of them)
//- resource_pressure = false (all of them)
//- latency = false (all of them)
//
//- Latency:
//- dont_respond_to_ping = false
//- dont_respond_to_crud = false (all of them)
//- error_on_crud = false (all of them)
//- resource_pressure = false (all of them)
//- global_latency = true (could also be ping / crud latency)
//- global_latency_msec = 100 (could also be ping / crud latency)
//---
//Pod.
//
//Notes on extra requirements:
//- Pod creation (extra: with preference) -> only supported at the beginning, creating pods later in the scenario will be a future feature
//
//Required flags:
//- error_on_crud = false, changes `PodLifecycleHandler` responses
//- error_on_create
//- error_on_create_percentage
//- error_on_update
//- error_on_update_percentage
//- error_on_delete
//- error_on_delete_percentage
//- error_on_get
//- error_on_get_percentage
//
//- pod_status (enum, [PodPending, PodRunning, PodSucceeded, PodFailed, PodUnknown]) = PodRunning
//
//- start_time (date) = original_start_time
//
//Flags per event:
//- Pod failure (e.g. creation):
//- error_on_create = true
//- error_on_create_percentage = 90
//- pod_status = unchanged (left out)
//- start_time = unchanged (left out)
//
//- Pod status update:
//- error_on_crud = false (all of them)
//- pod_status = x
//- start_time = unchanged (left out)
//
//- Fake start time:
//- error_on_crud = false (all of them)
//- pod_status = unchanged (left out)
//- start_time = x
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeState *NodeState `protobuf:"bytes,1,opt,name=node_state,json=nodeState,proto3" json:"node_state,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetNodeState() *NodeState {
	if x != nil {
		return x.NodeState
	}
	return nil
}

type NodeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DontRespondToPing bool `protobuf:"varint,1,opt,name=dont_respond_to_ping,json=dontRespondToPing,proto3" json:"dont_respond_to_ping,omitempty"`
}

func (x *NodeState) Reset() {
	*x = NodeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState) ProtoMessage() {}

func (x *NodeState) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState.ProtoReflect.Descriptor instead.
func (*NodeState) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{4}
}

func (x *NodeState) GetDontRespondToPing() bool {
	if x != nil {
		return x.DontRespondToPing
	}
	return false
}

type PodState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodStatus PodState_PodStatus `protobuf:"varint,1,opt,name=pod_status,json=podStatus,proto3,enum=apate.scenario.PodState_PodStatus" json:"pod_status,omitempty"`
	StartTime string             `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *PodState) Reset() {
	*x = PodState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodState) ProtoMessage() {}

func (x *PodState) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodState.ProtoReflect.Descriptor instead.
func (*PodState) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{5}
}

func (x *PodState) GetPodStatus() PodState_PodStatus {
	if x != nil {
		return x.PodStatus
	}
	return PodState_POD_PENDING
}

func (x *PodState) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type NodeGroup_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RAM int32 `protobuf:"varint,1,opt,name=RAM,proto3" json:"RAM,omitempty"`
}

func (x *NodeGroup_Node) Reset() {
	*x = NodeGroup_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeGroup_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGroup_Node) ProtoMessage() {}

func (x *NodeGroup_Node) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGroup_Node.ProtoReflect.Descriptor instead.
func (*NodeGroup_Node) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{2, 0}
}

func (x *NodeGroup_Node) GetRAM() int32 {
	if x != nil {
		return x.RAM
	}
	return 0
}

type Event_PodEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string    `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	PodState   *PodState `protobuf:"bytes,2,opt,name=pod_state,json=podState,proto3" json:"pod_state,omitempty"`
}

func (x *Event_PodEvent) Reset() {
	*x = Event_PodEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_PodEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_PodEvent) ProtoMessage() {}

func (x *Event_PodEvent) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_PodEvent.ProtoReflect.Descriptor instead.
func (*Event_PodEvent) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Event_PodEvent) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *Event_PodEvent) GetPodState() *PodState {
	if x != nil {
		return x.PodState
	}
	return nil
}

type NodeState_CrudResponseState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DontRespondToCreate  bool `protobuf:"varint,1,opt,name=dont_respond_to_create,json=dontRespondToCreate,proto3" json:"dont_respond_to_create,omitempty"`
	DontRespondToUpdate  bool `protobuf:"varint,2,opt,name=dont_respond_to_update,json=dontRespondToUpdate,proto3" json:"dont_respond_to_update,omitempty"`
	DontRespondToDelete  bool `protobuf:"varint,3,opt,name=dont_respond_to_delete,json=dontRespondToDelete,proto3" json:"dont_respond_to_delete,omitempty"`
	DontRespondToGet     bool `protobuf:"varint,4,opt,name=dont_respond_to_get,json=dontRespondToGet,proto3" json:"dont_respond_to_get,omitempty"`
	DontRespondToGetPods bool `protobuf:"varint,5,opt,name=dont_respond_to_get_pods,json=dontRespondToGetPods,proto3" json:"dont_respond_to_get_pods,omitempty"`
}

func (x *NodeState_CrudResponseState) Reset() {
	*x = NodeState_CrudResponseState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState_CrudResponseState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState_CrudResponseState) ProtoMessage() {}

func (x *NodeState_CrudResponseState) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState_CrudResponseState.ProtoReflect.Descriptor instead.
func (*NodeState_CrudResponseState) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{4, 0}
}

func (x *NodeState_CrudResponseState) GetDontRespondToCreate() bool {
	if x != nil {
		return x.DontRespondToCreate
	}
	return false
}

func (x *NodeState_CrudResponseState) GetDontRespondToUpdate() bool {
	if x != nil {
		return x.DontRespondToUpdate
	}
	return false
}

func (x *NodeState_CrudResponseState) GetDontRespondToDelete() bool {
	if x != nil {
		return x.DontRespondToDelete
	}
	return false
}

func (x *NodeState_CrudResponseState) GetDontRespondToGet() bool {
	if x != nil {
		return x.DontRespondToGet
	}
	return false
}

func (x *NodeState_CrudResponseState) GetDontRespondToGetPods() bool {
	if x != nil {
		return x.DontRespondToGetPods
	}
	return false
}

type NodeState_CrudErrorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorOnCreate  bool `protobuf:"varint,1,opt,name=error_on_create,json=errorOnCreate,proto3" json:"error_on_create,omitempty"`
	ErrorOnUpdate  bool `protobuf:"varint,2,opt,name=error_on_update,json=errorOnUpdate,proto3" json:"error_on_update,omitempty"`
	ErrorOnDelete  bool `protobuf:"varint,3,opt,name=error_on_delete,json=errorOnDelete,proto3" json:"error_on_delete,omitempty"`
	ErrorOnGet     bool `protobuf:"varint,4,opt,name=error_on_get,json=errorOnGet,proto3" json:"error_on_get,omitempty"`
	ErrorOnGetPods bool `protobuf:"varint,5,opt,name=error_on_get_pods,json=errorOnGetPods,proto3" json:"error_on_get_pods,omitempty"`
}

func (x *NodeState_CrudErrorState) Reset() {
	*x = NodeState_CrudErrorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState_CrudErrorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState_CrudErrorState) ProtoMessage() {}

func (x *NodeState_CrudErrorState) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState_CrudErrorState.ProtoReflect.Descriptor instead.
func (*NodeState_CrudErrorState) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{4, 1}
}

func (x *NodeState_CrudErrorState) GetErrorOnCreate() bool {
	if x != nil {
		return x.ErrorOnCreate
	}
	return false
}

func (x *NodeState_CrudErrorState) GetErrorOnUpdate() bool {
	if x != nil {
		return x.ErrorOnUpdate
	}
	return false
}

func (x *NodeState_CrudErrorState) GetErrorOnDelete() bool {
	if x != nil {
		return x.ErrorOnDelete
	}
	return false
}

func (x *NodeState_CrudErrorState) GetErrorOnGet() bool {
	if x != nil {
		return x.ErrorOnGet
	}
	return false
}

func (x *NodeState_CrudErrorState) GetErrorOnGetPods() bool {
	if x != nil {
		return x.ErrorOnGetPods
	}
	return false
}

type NodeState_ResourcePressureState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnablePressure        bool  `protobuf:"varint,1,opt,name=enable_pressure,json=enablePressure,proto3" json:"enable_pressure,omitempty"`
	CpuUsage              int32 `protobuf:"varint,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	RamUsage              int32 `protobuf:"varint,3,opt,name=ram_usage,json=ramUsage,proto3" json:"ram_usage,omitempty"`
	StorageUsage          int32 `protobuf:"varint,4,opt,name=storage_usage,json=storageUsage,proto3" json:"storage_usage,omitempty"`
	EphemeralStorageUsage int32 `protobuf:"varint,5,opt,name=ephemeral_storage_usage,json=ephemeralStorageUsage,proto3" json:"ephemeral_storage_usage,omitempty"`
}

func (x *NodeState_ResourcePressureState) Reset() {
	*x = NodeState_ResourcePressureState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState_ResourcePressureState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState_ResourcePressureState) ProtoMessage() {}

func (x *NodeState_ResourcePressureState) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState_ResourcePressureState.ProtoReflect.Descriptor instead.
func (*NodeState_ResourcePressureState) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{4, 2}
}

func (x *NodeState_ResourcePressureState) GetEnablePressure() bool {
	if x != nil {
		return x.EnablePressure
	}
	return false
}

func (x *NodeState_ResourcePressureState) GetCpuUsage() int32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *NodeState_ResourcePressureState) GetRamUsage() int32 {
	if x != nil {
		return x.RamUsage
	}
	return 0
}

func (x *NodeState_ResourcePressureState) GetStorageUsage() int32 {
	if x != nil {
		return x.StorageUsage
	}
	return 0
}

func (x *NodeState_ResourcePressureState) GetEphemeralStorageUsage() int32 {
	if x != nil {
		return x.EphemeralStorageUsage
	}
	return 0
}

type NodeState_LatencyState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalLatency     bool  `protobuf:"varint,1,opt,name=global_latency,json=globalLatency,proto3" json:"global_latency,omitempty"`
	GlobalLatencyMsec int32 `protobuf:"varint,2,opt,name=global_latency_msec,json=globalLatencyMsec,proto3" json:"global_latency_msec,omitempty"`
	PingLatency       bool  `protobuf:"varint,3,opt,name=ping_latency,json=pingLatency,proto3" json:"ping_latency,omitempty"`
	PingLatencyMsec   int32 `protobuf:"varint,4,opt,name=ping_latency_msec,json=pingLatencyMsec,proto3" json:"ping_latency_msec,omitempty"`
	CrudLatency       bool  `protobuf:"varint,5,opt,name=crud_latency,json=crudLatency,proto3" json:"crud_latency,omitempty"`
	CrudLatencyMsec   int32 `protobuf:"varint,6,opt,name=crud_latency_msec,json=crudLatencyMsec,proto3" json:"crud_latency_msec,omitempty"`
}

func (x *NodeState_LatencyState) Reset() {
	*x = NodeState_LatencyState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeState_LatencyState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState_LatencyState) ProtoMessage() {}

func (x *NodeState_LatencyState) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState_LatencyState.ProtoReflect.Descriptor instead.
func (*NodeState_LatencyState) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{4, 3}
}

func (x *NodeState_LatencyState) GetGlobalLatency() bool {
	if x != nil {
		return x.GlobalLatency
	}
	return false
}

func (x *NodeState_LatencyState) GetGlobalLatencyMsec() int32 {
	if x != nil {
		return x.GlobalLatencyMsec
	}
	return 0
}

func (x *NodeState_LatencyState) GetPingLatency() bool {
	if x != nil {
		return x.PingLatency
	}
	return false
}

func (x *NodeState_LatencyState) GetPingLatencyMsec() int32 {
	if x != nil {
		return x.PingLatencyMsec
	}
	return 0
}

func (x *NodeState_LatencyState) GetCrudLatency() bool {
	if x != nil {
		return x.CrudLatency
	}
	return false
}

func (x *NodeState_LatencyState) GetCrudLatencyMsec() int32 {
	if x != nil {
		return x.CrudLatencyMsec
	}
	return 0
}

type PodState_CrudErrorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorOnCreate           bool  `protobuf:"varint,1,opt,name=error_on_create,json=errorOnCreate,proto3" json:"error_on_create,omitempty"`
	ErrorOnCreatePercentage int32 `protobuf:"varint,2,opt,name=error_on_create_percentage,json=errorOnCreatePercentage,proto3" json:"error_on_create_percentage,omitempty"`
	ErrorOnUpdate           bool  `protobuf:"varint,3,opt,name=error_on_update,json=errorOnUpdate,proto3" json:"error_on_update,omitempty"`
	ErrorOnUpdatePercentage int32 `protobuf:"varint,4,opt,name=error_on_update_percentage,json=errorOnUpdatePercentage,proto3" json:"error_on_update_percentage,omitempty"`
	ErrorOnDelete           bool  `protobuf:"varint,5,opt,name=error_on_delete,json=errorOnDelete,proto3" json:"error_on_delete,omitempty"`
	ErrorOnDeletePercentage int32 `protobuf:"varint,6,opt,name=error_on_delete_percentage,json=errorOnDeletePercentage,proto3" json:"error_on_delete_percentage,omitempty"`
	ErrorOnGet              bool  `protobuf:"varint,7,opt,name=error_on_get,json=errorOnGet,proto3" json:"error_on_get,omitempty"`
	ErrorOnGetPercentage    int32 `protobuf:"varint,8,opt,name=error_on_get_percentage,json=errorOnGetPercentage,proto3" json:"error_on_get_percentage,omitempty"`
}

func (x *PodState_CrudErrorState) Reset() {
	*x = PodState_CrudErrorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_scenario_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodState_CrudErrorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodState_CrudErrorState) ProtoMessage() {}

func (x *PodState_CrudErrorState) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_scenario_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodState_CrudErrorState.ProtoReflect.Descriptor instead.
func (*PodState_CrudErrorState) Descriptor() ([]byte, []int) {
	return file_scenario_scenario_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PodState_CrudErrorState) GetErrorOnCreate() bool {
	if x != nil {
		return x.ErrorOnCreate
	}
	return false
}

func (x *PodState_CrudErrorState) GetErrorOnCreatePercentage() int32 {
	if x != nil {
		return x.ErrorOnCreatePercentage
	}
	return 0
}

func (x *PodState_CrudErrorState) GetErrorOnUpdate() bool {
	if x != nil {
		return x.ErrorOnUpdate
	}
	return false
}

func (x *PodState_CrudErrorState) GetErrorOnUpdatePercentage() int32 {
	if x != nil {
		return x.ErrorOnUpdatePercentage
	}
	return 0
}

func (x *PodState_CrudErrorState) GetErrorOnDelete() bool {
	if x != nil {
		return x.ErrorOnDelete
	}
	return false
}

func (x *PodState_CrudErrorState) GetErrorOnDeletePercentage() int32 {
	if x != nil {
		return x.ErrorOnDeletePercentage
	}
	return 0
}

func (x *PodState_CrudErrorState) GetErrorOnGet() bool {
	if x != nil {
		return x.ErrorOnGet
	}
	return false
}

func (x *PodState_CrudErrorState) GetErrorOnGetPercentage() int32 {
	if x != nil {
		return x.ErrorOnGetPercentage
	}
	return 0
}

var File_scenario_scenario_proto protoreflect.FileDescriptor

var file_scenario_scenario_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2f, 0x73, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x61, 0x74, 0x65,
	0x2e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x08, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0xa4, 0x01, 0x0a,
	0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3d, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x18, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x41, 0x4d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x41, 0x4d, 0x22, 0xa4, 0x01, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x61, 0x74, 0x65,
	0x2e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x61,
	0x0a, 0x08, 0x50, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x6f,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x50,
	0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x90, 0x08, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2f, 0x0a, 0x14, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f,
	0x74, 0x6f, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64,
	0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x50, 0x69, 0x6e, 0x67,
	0x1a, 0x99, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x64,
	0x6f, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x6f, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x64, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x64, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x54,
	0x6f, 0x47, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x18, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x54, 0x6f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x73, 0x1a, 0xd5, 0x01, 0x0a,
	0x0e, 0x43, 0x72, 0x75, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6f, 0x6e, 0x5f, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x6e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x64, 0x73, 0x1a, 0xd7, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x83,
	0x02, 0x0a, 0x0c, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x73, 0x65, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x75, 0x64, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x72, 0x75,
	0x64, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x72, 0x75, 0x64,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x72, 0x75, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x4d, 0x73, 0x65, 0x63, 0x22, 0xea, 0x04, 0x0a, 0x08, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x70, 0x6f, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x1a, 0x98, 0x03, 0x0a, 0x0e, 0x43, 0x72, 0x75, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x1a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x17, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f, 0x6e, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6f,
	0x6e, 0x5f, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6f, 0x6e, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4f,
	0x6e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x61,
	0x0a, 0x09, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x50,
	0x4f, 0x44, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x4f, 0x44, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x50, 0x4f, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4f, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x04, 0x32, 0x5b, 0x0a, 0x11, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x72, 0x12, 0x46, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x61,
	0x74, 0x65, 0x2e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x49,
	0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x74, 0x6c,
	0x61, 0x72, 0x67, 0x65, 0x2d, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x6f, 0x70,
	0x65, 0x6e, 0x64, 0x63, 0x2d, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2d, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_scenario_scenario_proto_rawDescOnce sync.Once
	file_scenario_scenario_proto_rawDescData = file_scenario_scenario_proto_rawDesc
)

func file_scenario_scenario_proto_rawDescGZIP() []byte {
	file_scenario_scenario_proto_rawDescOnce.Do(func() {
		file_scenario_scenario_proto_rawDescData = protoimpl.X.CompressGZIP(file_scenario_scenario_proto_rawDescData)
	})
	return file_scenario_scenario_proto_rawDescData
}

var file_scenario_scenario_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scenario_scenario_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_scenario_scenario_proto_goTypes = []interface{}{
	(PodState_PodStatus)(0),                 // 0: apate.scenario.PodState.PodStatus
	(*Scenario)(nil),                        // 1: apate.scenario.Scenario
	(*Task)(nil),                            // 2: apate.scenario.Task
	(*NodeGroup)(nil),                       // 3: apate.scenario.NodeGroup
	(*Event)(nil),                           // 4: apate.scenario.Event
	(*NodeState)(nil),                       // 5: apate.scenario.NodeState
	(*PodState)(nil),                        // 6: apate.scenario.PodState
	(*NodeGroup_Node)(nil),                  // 7: apate.scenario.NodeGroup.Node
	(*Event_PodEvent)(nil),                  // 8: apate.scenario.Event.PodEvent
	(*NodeState_CrudResponseState)(nil),     // 9: apate.scenario.NodeState.CrudResponseState
	(*NodeState_CrudErrorState)(nil),        // 10: apate.scenario.NodeState.CrudErrorState
	(*NodeState_ResourcePressureState)(nil), // 11: apate.scenario.NodeState.ResourcePressureState
	(*NodeState_LatencyState)(nil),          // 12: apate.scenario.NodeState.LatencyState
	(*PodState_CrudErrorState)(nil),         // 13: apate.scenario.PodState.CrudErrorState
	(*empty.Empty)(nil),                     // 14: google.protobuf.Empty
}
var file_scenario_scenario_proto_depIdxs = []int32{
	2,  // 0: apate.scenario.Scenario.task:type_name -> apate.scenario.Task
	3,  // 1: apate.scenario.Task.nodeGroupSet:type_name -> apate.scenario.NodeGroup
	4,  // 2: apate.scenario.Task.event:type_name -> apate.scenario.Event
	5,  // 3: apate.scenario.Event.node_state:type_name -> apate.scenario.NodeState
	0,  // 4: apate.scenario.PodState.pod_status:type_name -> apate.scenario.PodState.PodStatus
	6,  // 5: apate.scenario.Event.PodEvent.pod_state:type_name -> apate.scenario.PodState
	1,  // 6: apate.scenario.ScenarioRegistrar.registerScenario:input_type -> apate.scenario.Scenario
	14, // 7: apate.scenario.ScenarioRegistrar.registerScenario:output_type -> google.protobuf.Empty
	7,  // [7:8] is the sub-list for method output_type
	6,  // [6:7] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_scenario_scenario_proto_init() }
func file_scenario_scenario_proto_init() {
	if File_scenario_scenario_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scenario_scenario_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeGroup_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_PodEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState_CrudResponseState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState_CrudErrorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState_ResourcePressureState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeState_LatencyState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_scenario_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodState_CrudErrorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scenario_scenario_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scenario_scenario_proto_goTypes,
		DependencyIndexes: file_scenario_scenario_proto_depIdxs,
		EnumInfos:         file_scenario_scenario_proto_enumTypes,
		MessageInfos:      file_scenario_scenario_proto_msgTypes,
	}.Build()
	File_scenario_scenario_proto = out.File
	file_scenario_scenario_proto_rawDesc = nil
	file_scenario_scenario_proto_goTypes = nil
	file_scenario_scenario_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ScenarioRegistrarClient is the client API for ScenarioRegistrar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScenarioRegistrarClient interface {
	RegisterScenario(ctx context.Context, in *Scenario, opts ...grpc.CallOption) (*empty.Empty, error)
}

type scenarioRegistrarClient struct {
	cc grpc.ClientConnInterface
}

func NewScenarioRegistrarClient(cc grpc.ClientConnInterface) ScenarioRegistrarClient {
	return &scenarioRegistrarClient{cc}
}

func (c *scenarioRegistrarClient) RegisterScenario(ctx context.Context, in *Scenario, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/apate.scenario.ScenarioRegistrar/registerScenario", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScenarioRegistrarServer is the server API for ScenarioRegistrar service.
type ScenarioRegistrarServer interface {
	RegisterScenario(context.Context, *Scenario) (*empty.Empty, error)
}

// UnimplementedScenarioRegistrarServer can be embedded to have forward compatible implementations.
type UnimplementedScenarioRegistrarServer struct {
}

func (*UnimplementedScenarioRegistrarServer) RegisterScenario(context.Context, *Scenario) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterScenario not implemented")
}

func RegisterScenarioRegistrarServer(s *grpc.Server, srv ScenarioRegistrarServer) {
	s.RegisterService(&_ScenarioRegistrar_serviceDesc, srv)
}

func _ScenarioRegistrar_RegisterScenario_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scenario)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScenarioRegistrarServer).RegisterScenario(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apate.scenario.ScenarioRegistrar/RegisterScenario",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScenarioRegistrarServer).RegisterScenario(ctx, req.(*Scenario))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScenarioRegistrar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apate.scenario.ScenarioRegistrar",
	HandlerType: (*ScenarioRegistrarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerScenario",
			Handler:    _ScenarioRegistrar_RegisterScenario_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scenario/scenario.proto",
}
