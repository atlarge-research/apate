syntax = "proto3";

option go_package = "github.com/atlarge-research/opendc-emulate-kubernetes/api/scenario/public";

service ScenarioSender {
    rpc sendScenario (Scenario) returns (SendScenarioResponse) {}
}

message SendScenarioResponse {

}

message Scenario {
    repeated Node nodes = 1;
    repeated NodeGroup nodegroups = 2;
    // A scenario consists of an number of tasks.
    repeated Task tasks = 3;
}

message Task {
    /// The name of a task can be used to revert it.
    string name = 1;

    // Time offset after the start of the scenario
    // Specify as string with unit like 10s, 2h, 20ms.
    // If no unit is given, defaults to seconds.
    string time = 2;

    // Revert the task
    bool revert = 3;

    // Which nodes this task applies to
    // This field should not be set when revert is true
    repeated string nodegroups = 4;
}

message Node {
    // The type of the node. This can be referred to in nodegroups.
    string nodetype = 1;

    // The amount of ram a node gets.
    // Specify as string with unit like 12G, 42M, 200K, or in bytes (without unit)
    string ram = 2;

    // Percentage of cpu allocated to a node.
    int32 cpu_percent = 3;

    // Maximum number of pods per node.
    int32 max_pods = 4;
}

// A node group specifies a group of many nodes with the same properties.
// A nodegroup refers to a node and how many times that type of node is needed.
message NodeGroup {

    // The name of the group. This can be referred to in scenarios.
    string groupname = 1;

    // The type of node in this group.
    string nodetype = 3;

    // How many times you want this type of node.
    int32 amount = 2;
}

