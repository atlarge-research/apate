syntax = "proto3";

option go_package = "github.com/atlarge-research/opendc-emulate-kubernetes/api/apatelet";
package apate.apatelet;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// This service will run on the Apatelets
service Scenario {

    // Starts a scenario on the current Apatelet
    // This will be called on every Apatelet
    rpc startScenario (ApateletScenario) returns (google.protobuf.Empty) {}
}

// The top level object which defines how the different Apatelet will emulate certain deployments
message ApateletScenario {
    // A scenario consists of multiple tasks that will be scheduled on a Apatelet
    repeated Task task = 1;
}

message Task {
    // Whether to revert the event in this task
    bool revert_task = 1;

    // The timestamp on which this task will be executed
    // Is in nanoseconds since the scenario has started
    // Note that this field should not be used by the apatelet!
    int64 relative_timestamp = 2;

    // The timestamp on which this task will be executed
    // Is a nanosecond unix timestamp
    // This is the timestamp field that should be used by the apatelet!
    int64 absolute_timestamp = 3;

    // The UUID of the nodes on which this task will be executed
    // Should not be used by the apatelet as every task it receives is target towards that apatelet
    map<string, bool> node_set = 4;

    // The event flags belonging to this task
    map<int32, google.protobuf.Any> event_flags = 5;
}
