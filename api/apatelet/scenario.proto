syntax = "proto3";

option go_package = "github.com/atlarge-research/opendc-emulate-kubernetes/api/apatelet";
package apate.apatelet;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// This service will run on the Apatelets
service Scenario {

    // Starts a scenario on the current Apatelet
    // This will be called on every Apatelet
    rpc startScenario (ApateletScenario) returns (google.protobuf.Empty) {}
}

// The top level object which defines how the different Apatelet will emulate certain deployments
message ApateletScenario {
    // A scenario consists of multiple tasks that will be scheduled on a Apatelet
    repeated Task task = 1;

    // A unix time stamp indicating when this scenario will start
    // Should be enough time such that every Apatelet has received the startScenario request
    // The task timestamps will be relative to this time
    int32 start_time = 2;
}

message Task {
    // Whether to revert the event in this task
    bool revert_task = 1;

    // The timestamp on which this task will be executed
    // Is in milliseconds since the scenario has started
    int32 timestamp = 2;

    // The UUID of the nodes on which this task will be executed
    repeated string node_set = 3;

    // The event belonging to this task
    map<int32, google.protobuf.Any> event_flags = 4;
}
