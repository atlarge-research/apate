syntax = "proto3";

option go_package = "github.com/atlarge-research/opendc-emulate-kubernetes/api/apatelet";
package apate.apatelet;

import "google/protobuf/empty.proto";
import "scenario/events.proto";
import "scenario/pods.proto";

// This service will run on the Apatelets
service Scenario {

    // Starts a scenario on the current Apatelet
    // This will be called on every Apatelet
    rpc startScenario (ApateletScenario) returns (google.protobuf.Empty) {}
}

// The top level object which defines how the different Apatelet will emulate certain deployments
message ApateletScenario {
    // A scenario consists of multiple tasks that will be scheduled on a Apatelet
    repeated Task task = 1;

    // A unix time stamp indicating when this scenario will start
    // Should be enough time such that every Apatelet has received the startScenario request
    // The task timestamps will be relative to this time
    int32 start_time = 2;
}

message Task {
    // The name of the task, can be used later to revert it
    string name = 1;

    // Whether to revert the task with the given name
    bool revert_task = 2;

    // The timestamp on which this task will be executed
    // Is in milliseconds since the scenario has started
    int32 timestamp = 3;

    // The UUID of the nodes on which this task will be executed
    // Will be ignored when revert_task is true
    repeated string node_set = 4;

    // The event belonging to this task
    // Will be ignored when revert_task is true
    oneof event {
        NodeEvent node_event = 5;
        PodEvent pod_event = 6;
    }
}

// An event that will be applied on a node
message NodeEvent {
    // The node state that will be applied to the node.
    NodeState node_state = 1;
}

// An event that will be applied on pod(s)
message PodEvent {
    // The name of the configuration_metadata_name used to determine on which pod this event applies
    string configuration_metadata_name = 1;

    // The pod state that will be applied to the pod(s) defined by `deployment`.
    PodState pod_state = 2;
}

// The node state that will be applied to the node.
message NodeState {
    // The responses given to Kubernetes on node level
    message NodeResponseState {
        // Some more responses which can also be influenced on pod level
        ResponseState response_state = 1;

        // How to respond to the GetPods request
        scenario.Response get_pods_response = 2;
        int32 get_pods_response_percentage = 3;

        // How to respond to ping
        scenario.Response ping_response = 4;
        int32 ping_response_percentage = 5;
    }
    NodeResponseState node_response_state = 1;

    // Defines the amount of resources the node has in use
    // Will default to 0 for all types of possible resources (corev1.ResourceName)
    message ResourceState {
        // Whether to enable the next fields
        // If not enabled, the next fields will be ignored
        bool enable_resource_alteration = 1;

        // The amount of bytes of memory used
        int64 memory_usage = 2;

        // The of milli CPUs used
        int64 cpu_usage = 3;

        // The amount of bytes of storage used
        int64 storage_usage = 4;

        // The amount of bytes of ephermal storage used
        int64 ephemeral_storage_usage = 5;
    }
    ResourceState resource_state = 2;

    // Defines the amount of added network latency the node experiences
    // Will default to 0 msec
    message AddedLatencyState {
        // Whether to enable added latency
        // If not enabled, the next field will be ignored
        bool added_latency_enabled = 1;

        // The amount of msec of latency
        int32 added_latency_msec = 2;
    }
    AddedLatencyState added_latency_state = 3;
}

// The node state that will be applied to a given pod configuration.
// On which configuration this state is applied depends on the `configuration_metadata_name` in `PodEvent`
message PodState {
    // The responses given to Kubernetes on pod level
    message PodResponseState {
        // Some more responses which can also be influenced on node level
        ResponseState response_state = 1;
    }
    PodResponseState pod_response_state = 1;

    // The status of a certain percentage of pods in the current configuration
    // Can be left empty to keep the status unchanged
    // If left empty, the pod_status_percentage will be ignored
    scenario.PodStatus pod_status = 2;

    // The percentage of pods in the current deployment getting the new status
    int32 pod_status_percentage = 3;

    // The starting time of this pod (see corev1.PodStatus.StartTime)
    // ISO8601 format
    // Can be left empty to keep the starting time unchanged
    string pod_start_time = 4;
}

// Defines how to respond to certain requests from k8s
// The percentage fields define what percentage of these types of requests on this node will be affected by the setting
// Note that this percentage will be ignored when the action is NORMAL
message ResponseState {
    // How to respond to the CreatePod request
    scenario.Response create_pod_response = 1;
    int32 create_pod_response_percentage = 2;

    // How to respond to the UpdatePod request
    scenario.Response update_pod_response = 3;
    int32 update_pod_response_percentage = 4;

    // How to respond to the DeletePod request
    scenario.Response delete_pod_response = 5;
    int32 delete_pod_response_percentage = 6;

    // How to respond to the GetPod request
    scenario.Response get_pod_response = 7;
    int32 get_pod_response_percentage = 8;

    // How to respond to the GetPodStatus request
    scenario.Response get_pod_status_response = 9;
    int32 get_pod_status_response_percentage = 10;
}
